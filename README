
production loop
----------------
  airs2chirp      - translate AIRS to CHIRP granules
  cris2chirp      - interpolate CrIS to CHIRP granules
  opts_airs_loop  - run airs2chirp on a list of days
  opts_cris_loop  - run cris2chirp on a list of days
  chirp_batch     - run chirp translation as a batch job
  chirp_main      - top-level single-granule processing

support and test
-----------------
  read_airs_h4    - read an AIRS HDF4 granule
  read_cris_h5    - read a CrIS H5/netCDF granule
  read_netcdf_h5  - general purpose netcdf H5 reader
  read_yaml_cfg   - read yaml proc opts and prod attr
  write_yaml_cfg  - write yaml proc opts and prod attr
  copy_airs_attr  - add airs-parent product attributes
  copy_cris_attr  - add cris-parent product attributes
  bias_correct    - simple bias correction

  a2cris_lin      - airs2cris linearization test
  a2cris_srfs     - airs2cris linearization with SRF plots
  airs_num_synth  - multi-granule count of L1cNumSynth values
  check_synth     - counts for synthetic and fixed channels
  nedn_est        - NEdN estimate for the AIRS-to-CrIS translation
  nedn_interp     - NEdN interpolation demo
  pen_lift        - add NaNs for pen lift at frequency gaps

netCDF format
--------------
  airs2chirp.cdl  - AIRS CHIRP SDR netCDF CDL template
  cris2chirp.cdl  - CrIS CHIRP SDR netCDF CDL template
  airs2chirp.nc   - AIRS CHIRP SDR netCDF initial file
  cris2chirp.nc   - CrIS CHIRP SDR netCDF initial file

YAML config files
-----------------
 chirp_airs.yaml, chirp_cris.yaml: initial files from Evan
 chirp_airs_init.yaml: initial yaml spec for airs-parent chirp
 chirp_cris_init.yaml: initial yaml spec for cris-parent chirp

netCDF notes
-------------
chirp initial netcdf file from CDL spec

  ncgen -o chirp_master.nc chirp_master.cdl

Starting from an existing netCDF file (a UW CrIS granule) I've been
able to dump the CDL format spec, edit it extensively, removing some
variables and add new ones, write an empty netCDF file from the CDL
spec, and write data to the netCDF file.  The UW file (and I think
all the new NASA netCDF products) are bloated and groaning with
attributes, and my new netCDF file is, too.  Creating something like
that from scratch would be a major hassle, but copying and modifying
it is not as bad.

CDL spec extrated from a netCDF file

  ncdump -h uw_sdr_test.nc > uw_sdr_test.cdl

Initial netcdf file from a CDL spec

  ncgen -o ncgen_test.nc uw_sdr_test.cdl

Compilation notes
------------------
The environment variable MCR_CACHE_ROOT will set an alternate path
to the .mcrCache9.8 (or whatever) directory.  The directory is set
at runtime, not at compile time, and you can move it around by
changing MCR_CACHE_ROOT without recompiling.  ctfroot called at
runtime returns this path.

Beware "ls" may miss .mcrCache9.8 since it's a "dotfile".  

We don't want the "-C" option, that seems to always create the cache
directory in the run directory.

